#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language slovene
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "frame=lines,language=Octave"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Rešitve 1.
 vaje iz Numeričnih metod II
\end_layout

\begin_layout Author
Martin Vuk
\end_layout

\begin_layout Abstract
Tokrat bomo vaje reševali malce drugače kot smo jih na vajah.
 Da bi študentje dobili več občutka za programiranje, bomo do rešitev v
 čimvečji meri prišli z uporabo programa 
\emph on
octave.

\emph default
 
\end_layout

\begin_layout Enumerate
Izračunaj neskončno in drugo normo naslednjih funkcij 
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\frac{1}{1+x^{2}}$
\end_inset

 na intervalu 
\begin_inset Formula $[-1,1]$
\end_inset

 in 
\begin_inset Formula $[0,\infty)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $x\log x$
\end_inset

 na intervalu 
\begin_inset Formula $[0,2]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $-x^{5}+x^{2}+2x+1$
\end_inset

 na 
\begin_inset Formula $[0,1.5]$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Rešitev:
\end_layout

\begin_layout Enumerate
Neskončna norma funkcije je enaka
\begin_inset Formula 
\[
||f||_{\infty,[a,b]}=\sup_{x\in[a,b]}|f(x)|
\]

\end_inset

to pomeni, da moramo poiskati maksimum funkcije 
\begin_inset Formula $|f|$
\end_inset

 oziroma maksimum in minimum funkcije 
\begin_inset Formula $f$
\end_inset

 na danem intervalu.
 To nalogo je kar težko sprogramirati v 
\emph on
octave, 
\emph default
saj je iskanje ekstremov za splošno funkcijo kar zahteven problem.
 Nalogo rešite na roke!
\begin_inset Newline newline
\end_inset

Druga norma je dana z integralom 
\begin_inset Formula 
\[
||f||_{2}=\int_{a}^{b}f(x)^{2}dx,
\]

\end_inset

ki ga lahko v 
\emph on
octave 
\emph default
rešimo z vgrajeno funkcijo 
\family typewriter
quad 
\family default
ki izračuna določeni integral dane funkcije na končnem intervalu
\begin_inset listings
lstparams "lastline=2"
inline false
status open

\begin_layout Plain Layout

f2 = @(x) 1/(1+x^2)^2;
\end_layout

\begin_layout Plain Layout

norma2 = quad(f2, -1, 1)
\end_layout

\begin_layout Plain Layout

fprintfs("norma2.tex","%f",norma2)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Rezultat je 
\begin_inset Formula $||f||_{2,[-1,1]}=\input{norma2}$
\end_inset

.
\end_layout

\begin_layout Standard
Kot boste videli v poglavju o integraciji, je na neskončnem intervalu malce
 več težav.
 Metoda 
\family typewriter
quad 
\family default
je prirejena tudi za take primere:
\begin_inset listings
lstparams "lastline=1"
inline false
status open

\begin_layout Plain Layout

norma2inf = quad(f2,0,inf)
\end_layout

\begin_layout Plain Layout

fprintfs("norma2inf.tex","%f",norma2inf)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Rezultat je 
\begin_inset Formula $||f||_{2,[-1,1]}=\input{norma2inf}.$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Nalogo rešimo podobno kot pri točki (a).
\end_layout

\begin_layout Enumerate
V tem primeru gre za polinom, zato lažje poiščemo neskončno normo
\begin_inset listings
lstparams "lastline=5,lastline=7"
inline false
status open

\begin_layout Plain Layout

p = [-1 0 0 1 2 1]; % polinom podamo s koeficienti
\end_layout

\begin_layout Plain Layout

st = roots(polyder(p)); % stacionarne tocke
\end_layout

\begin_layout Plain Layout

% izberemo le realne tocke
\end_layout

\begin_layout Plain Layout

st = st(find(abs(imag(st))<1e-10));
\end_layout

\begin_layout Plain Layout

% izberemo le tocke na [0,1.5]
\end_layout

\begin_layout Plain Layout

st = st(find(0<=st & st<=1.5)); 
\end_layout

\begin_layout Plain Layout

norm_inf = max(abs(polyval(p,[0,st',1.5])))
\end_layout

\begin_layout Plain Layout

fprintfs("normacinf.tex","%f",norm_inf)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Rezultat je 
\begin_inset Formula $||p||_{\infty,[0,1.5]}=\input{normacinf.tex}.$
\end_inset

 Drugo normo lahko izračunamo z metodo quad, lahko pa tudi preko nedoločenega
 integrala.
\begin_inset listings
lstparams "lastline=2"
inline false
status open

\begin_layout Plain Layout

ip2 = polyint(conv(p,p)); % integral kvadrata polinoma
\end_layout

\begin_layout Plain Layout

norma2p = polyval(ip2,1.5)-polyval(ip2,0)
\end_layout

\begin_layout Plain Layout

fprintfs("normac2.tex","%f",norma2p)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Rezultat je 
\begin_inset Formula $||p||_{2,[0,1.5]}=\input{normac2.tex}.$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Napiši in nariši nekaj prvih Bernsteinovih polinomov
\begin_inset Formula 
\[
b_{n,i}={n \choose i}x^{i}(1-x)^{n-i};\quad i=0,\ldots,n.
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Rešitev: 
\series default
Polinome za 
\begin_inset Formula $n=3$
\end_inset

 narišemo z naslednjim programčkom
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

n=3;
\end_layout

\begin_layout Plain Layout

t=linspace(0,1); % tabela tock na [0,1]
\end_layout

\begin_layout Plain Layout

for i=0:n
\end_layout

\begin_layout Plain Layout

  plot(t,nchoosek(n,i)*t.^i.*(1-t).^(n-i));
\end_layout

\begin_layout Plain Layout

  hold on
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

hold off
\end_layout

\begin_layout Plain Layout

print -dpng "bernstein.png"
\end_layout

\end_inset

 
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename bernstein.png
	width 100text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Bernsteinovi polinomi za 
\begin_inset Formula $n=3$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Numerično preverite obnašanje norme 
\begin_inset Formula $||f-B_{n}f||_{\infty}$
\end_inset

 za funkcijo 
\begin_inset Formula 
\[
f(x)=\sqrt{x}.
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Rešitev:
\series default
 Bernsteinova aproksimacija je dana s formulo
\begin_inset Formula 
\[
B_{n}f=\sum_{i=0}^{n}f(\frac{i}{n})b_{n,i}(x).
\]

\end_inset

Neskončno normo bomo ocenili kar z iskanjem maksima absolutne vrednosti
 na tabeli funkcijskih vrednosti v dovolj velikem številu točk.
\begin_inset listings
lstparams "lastline=15"
inline false
status open

\begin_layout Plain Layout

f = @(x) sqrt(x); % definiramo funkcijo
\end_layout

\begin_layout Plain Layout

function y=B(f,n,x) 
\end_layout

\begin_layout Plain Layout

% funkcija B(f,n,x) izracuna Bernsteinovo 
\end_layout

\begin_layout Plain Layout

% aproksimacijo stopnje n funkcije f
\end_layout

\begin_layout Plain Layout

  b = @(n,i,x) nchoosek(n,i)*x.^i.*(1-x).^(n-i);  
\end_layout

\begin_layout Plain Layout

  y = zeros(size(x));
\end_layout

\begin_layout Plain Layout

  for i=0:n 
\end_layout

\begin_layout Plain Layout

    y += f(i/n).*b(n,i,x);
\end_layout

\begin_layout Plain Layout

  end
\end_layout

\begin_layout Plain Layout

endfunction
\end_layout

\begin_layout Plain Layout

x = linspace(0,1); % tocke na [0,1]
\end_layout

\begin_layout Plain Layout

r = zeros(10,1);
\end_layout

\begin_layout Plain Layout

for k=1:10
\end_layout

\begin_layout Plain Layout

  r(k)=norm(f(x)-B(f,k,x),'inf');
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

fprintfs("napaka_Bernstein.tex","%d& %f
\backslash

\backslash
cr
\backslash
n",[(1:10);r'])
\end_layout

\end_inset


\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
[
\end_layout

\begin_layout Plain Layout


\backslash
begin{array}{cc}
\end_layout

\begin_layout Plain Layout

n& ||f-B_nf||_
\backslash
infty
\backslash
cr
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
input{napaka_Bernstein.tex}
\end_layout

\begin_layout Plain Layout


\backslash
end{array}
\end_layout

\begin_layout Plain Layout


\backslash
]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Napaka pri aproksimaciji z Bernsteinovimi polinomi 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Naj bo 
\begin_inset Formula $\mathcal{C}([0,\pi])$
\end_inset

 opremljen s skalarnim produktom
\begin_inset Formula 
\[
\langle f,g\rangle=\int_{0}^{\pi}f(x)g(x)dx.
\]

\end_inset

Poišči element najboljše aproksimacije za polinom 
\begin_inset Formula $x^{2}+x-1$
\end_inset

 na prostor
\begin_inset Formula 
\[
\mathcal{L}(1,\sin x,\cos x).
\]

\end_inset


\series bold
Rešitev:
\series default
 Izračunamo Gramovo matriko
\begin_inset listings
lstparams "lastline=7"
inline false
status open

\begin_layout Plain Layout

G=zeros(3);
\end_layout

\begin_layout Plain Layout

baza = {@(x) ones(size(x)), @(x) sin(x), @(x) cos(x)}; 
\end_layout

\begin_layout Plain Layout

for i=1:3
\end_layout

\begin_layout Plain Layout

  for j=i:3
\end_layout

\begin_layout Plain Layout

    G(i,j) = quad(@(x) baza{i}(x)*baza{j}(x),0,pi);
\end_layout

\begin_layout Plain Layout

  end
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

G = G + triu(G,1)';
\end_layout

\begin_layout Plain Layout

latex(G,"gram.tex",4);
\end_layout

\end_inset


\begin_inset Formula 
\[
G=\begin{bmatrix}\input{gram}\end{bmatrix}
\]

\end_inset

in skalarne produkte polinoma 
\begin_inset Formula $p(x)$
\end_inset

 z baznimi funkcijami
\begin_inset listings
lstparams "lastline=5"
inline false
status open

\begin_layout Plain Layout

b = zeros(3,1);
\end_layout

\begin_layout Plain Layout

p = [1 1 -1];
\end_layout

\begin_layout Plain Layout

for i=1:3
\end_layout

\begin_layout Plain Layout

  b(i) = quad(@(x) polyval(p,x)*baza{i}(x),0,pi);
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

latex(b,"skal.tex",4)
\end_layout

\end_inset

in rešimo sistem 
\begin_inset Formula $G\alpha=b$
\end_inset


\begin_inset Formula 
\[
\begin{bmatrix}\input{gram}\end{bmatrix}\begin{bmatrix}\alpha_{1}\\
\alpha_{2}\\
\alpha_{3}
\end{bmatrix}=\begin{bmatrix}\input{skal}\end{bmatrix}.
\]

\end_inset


\begin_inset listings
lstparams "lastline=1"
inline false
status open

\begin_layout Plain Layout

alpha = G
\backslash
b;
\end_layout

\begin_layout Plain Layout

fprintfs("enaprox.tex", "%1.4f+(%1.4f)
\backslash

\backslash
sin(x)+(%1.4f)
\backslash

\backslash
cos(x)",alpha)
\end_layout

\end_inset

Element najboljše aproksimacije je tako enak
\begin_inset Formula 
\[
\input{enaprox}.
\]

\end_inset


\end_layout

\end_body
\end_document
